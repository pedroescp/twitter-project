// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  username        String?   @unique
  bio             String?
  email           String?
  emailVerified   DateTime?
  image           String?
  coverImage      String?
  profileImage    String?
  hashedPassword  String?
  CreateAt        DateTime  @default(now())
  updateAt        DateTime  @updatedAt()
  followingIds    String[]  @db.ObjectId
  hasNotification Boolean?

  post         Post[]
  comments     Comment[]
  notification Notification[]
}

model Post {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  body     String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  userId   String   @db.ObjectId
  linkeIds String[] @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  comments Comment[]
}

model Comment {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  body     String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  userId   String   @db.ObjectId
  postId   String   @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  Post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Notification {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  body     String
  userId   String   @db.ObjectId
  createAt DateTime @default(now())
  
  User     User     @relation(fields: [userId], references: [id])
}
